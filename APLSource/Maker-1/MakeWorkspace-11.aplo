 {r}←(fns MakeWorkspace)(name xml);⎕ML;⎕IO;needed
⍝ Note: not suitable for root projects!
⍝ This function assumes that everything needed for an application is available in the current WS.\\
⍝ `name` is the name of the application (not the top namespace!). For example, for Fire it is "Fire".\\
⍝ `needed` is a vector of names that identify everything in root that, well, is needed.\\
⍝ `fns` is a function to be executed by `MakeWorkspace` after the WS got reorganzied. This function must be
⍝ monadic. It is supposed to return either no result or a shy result.\\
⍝ This workspace performs the following steps:
⍝ 1. It deletes everything except what's listed in the vector of names `needed`. This includes the
⍝    namespace this function lives in.
⍝ 2. It deletes the `AcreConfig` namespace. This step might become superfluous in a future version of acre.
⍝ 3. It saves the current WS, meaning that the `⎕WSID` must already be set before `MakeWorkspace` is called.
⍝ 4. It copies the main namespace. For example, if `name` is `Foo` then it copies `#._Foo.Foo` (naming conventions).
⍝ 5. It executes `#.⎕EX '_',name
⍝ 6. It executes `fns` which is expected to be a niladic function that returns no or a shy result.\\
⍝    This is typically a function like `Fire.Reset` that restores global variables etc.
⍝ 7. It saves the current WS.
 r←⍬
 ⎕IO←1 ⋄ ⎕ML←1
 needed←(xml[;2]≡¨⊂'script')⌿xml[;3]
 needed,←{⊃⍵[;2]/⍨'copy'∘≡¨⍵[;1]}¨(xml[;2]≡¨⊂'ws')⌿xml[;4]
 #.⎕EX↑(needed,⊂'_',name)~⍨' '~¨⍨↓#.⎕NL⍳16
 ⎕EX'#.',name,'.AcreConfig'
 0 ⎕SAVE ⎕WSID
 ('#._',name,'.',name)#.⎕CY ⎕WSID
 #.⎕EX'_',name
 {}(fns{0::0 ⋄ ⍺⍺ ⍵})⍬
 0 ⎕SAVE ⎕WSID
⍝Done
