 {body}←x AddBuildID2Version buildID;⎕ML;⎕IO;version;row;version2;fnsname;ref;rc;buff;offset;length;varsName;line;result
 ⍝ `x` can either be a reference pointing to a class, an Interface or a scripted namespace
 ⍝ or the name of a function in an ordinary namespace.\\
 ⍝ Generally `AddBuildID2Version` executes the `Version` function (⍺) if there is
 ⍝ any. It then either adds the build ID (⍵, an integer) if there was not any yet
 ⍝ or replaces it by the built ID given.
 ⍝ ## Reference
 ⍝ Modifies the `Version` function if there is any in the given script.
 ⍝ ## Function name
 ⍝ Modifies the `Version` function in the namespace if there is any.
 ⎕IO←1 ⋄ ⎕ML←1
 :If 0=≡x
     ref←x
     result←2⊃ref.Version
     body←⎕SRC ref
     buff←'∇ *[A-Za-z]←Version'⎕S 0 1 2⍠('Mode' 'L')('Greedy' 0)('IC' 1)⊣body
     :If 1=⍴buff
         (offset length row)←⊃buff
         varsName←{{⍵↑⍨¯1+⍵⍳'←'}' '~⍨⍵↓⍨⍵⍳'∇'}(row+1)⊃body
         row+←2+⊃('\b',varsName,'←')⎕S 2⊣(1+row)↓body
         line←row⊃body
         ((line='.')/line)←'⌹'      ⍝ The `.` is a RegEx meta character!
         ((result='.')/result)←'⌹'
         :If 2='⌹'+.=result ⍝ No build ID yet?!
             line←result ⎕R(result,'.',⍕buildID)⊣line
         :Else
             line←result ⎕R(⊃{⍺,'⌹',⍵}/(3↑'⌹'##.A.Split result),⊂⍕buildID)⊣line
         :EndIf
         ((line='⌹')/line)←'.'
         (row⊃body)←line
         ref.##.⎕FIX body
     :EndIf
 :Else
     fnsname←x
     body←⎕NR fnsname
     version←2⊃⍎fnsname
     row←⊃¯1↑##.A.Where∨/¨version∘⍷¨body
     :If 2='.'+.=version
         version2←version,'.',⍕buildID
     :Else
         version2←(⊃'.'##.A.SplitPath version),⍕buildID
     :EndIf
     ((version='.')/version)←⊂'\.'
     version←⊃,/version
     line←row⊃body
     line←('''',version,'''')⎕R('''',version2,'''')⊣line
     (row⊃body)←line
     ref←⍎¯1↓⊃'.'##.A.SplitPath fnsname
     ref.⎕FX body
 :EndIf
